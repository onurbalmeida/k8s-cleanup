name: ci
on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.25.x'
      - run: go mod tidy
      - run: go test ./...

  e2e:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.25.x'
      - uses: helm/kind-action@v1.10.0
      - run: go test -v -tags=e2e ./test/e2e

  image:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=main
            type=sha,format=short,prefix=sha-
      - name: Set date env
        run: echo "DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=main
            COMMIT=${{ github.sha }}
            DATE=${{ env.DATE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  chart:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && hashFiles('chart/k8s-cleanup/Chart.yaml') != ''
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-helm@v4
        with:
          version: v3.14.4
      - name: Helm login to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Package and push chart snapshot
        run: |
          CHART=chart/k8s-cleanup
          CHVER=0.0.0-main.${{ github.run_number }}
          APPV=main
          helm package "$CHART" --version "$CHVER" --app-version "$APPV" -d dist
          helm push dist/k8s-cleanup-$CHVER.tgz oci://ghcr.io/${{ github.repository_owner }}/charts
      - name: Verify pull
        continue-on-error: true
        run: |
          helm show chart oci://ghcr.io/${{ github.repository_owner }}/charts/k8s-cleanup --version 0.0.0-main.${{ github.run_number }}
